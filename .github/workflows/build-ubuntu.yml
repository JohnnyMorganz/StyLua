name: Build Ubuntu

on: push

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            artifact-name: stylua-linux-x86_64
            artifact-alias: stylua-linux
            cargo-target: x86_64-unknown-linux-gnu
          - os: ubuntu-20.04
            artifact-name: stylua-linux-aarch64
            cargo-target: aarch64-unknown-linux-gnu
            linker: gcc-aarch64-linux-gnu

    name: Build (${{ matrix.artifact-name }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.cargo-target }}

      - name: Install Linker packages
        if: ${{ matrix.linker != '' }}
        run: |
          sudo apt update
          sudo apt install ${{ matrix.linker }}

      - name: Build Binary (All features)
        run: cargo build --verbose --locked --release --features lua52,lua53,lua54,luau --target ${{ matrix.cargo-target }}
        env:
          CARGO_TARGET_DIR: output

      - name: Setup Archive + Extension
        shell: bash
        run: |
          mkdir -p staging

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "output/${{ matrix.cargo-target }}/release/stylua.exe" staging/
            cd staging
            7z a ../release.zip *
          else
            cp "output/${{ matrix.cargo-target }}/release/stylua" staging/
            cd staging
            zip ../release.zip *
          fi

      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: release.zip
